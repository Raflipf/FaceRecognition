(()=>{"use strict";var e={56:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},72:e=>{var t=[];function n(e){for(var n=-1,a=0;a<t.length;a++)if(t[a].identifier===e){n=a;break}return n}function a(e,a){for(var s={},r=[],o=0;o<e.length;o++){var l=e[o],d=a.base?l[0]+a.base:l[0],c=s[d]||0,u="".concat(d," ").concat(c);s[d]=c+1;var m=n(u),h={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==m)t[m].references++,t[m].updater(h);else{var p=i(h,a);a.byIndex=o,t.splice(o,0,{identifier:u,updater:p,references:1})}r.push(u)}return r}function i(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,i){var s=a(e=e||[],i=i||{});return function(e){e=e||[];for(var r=0;r<s.length;r++){var o=n(s[r]);t[o].references--}for(var l=a(e,i),d=0;d<s.length;d++){var c=n(s[d]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}s=l}}},113:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},249:(e,t,n)=>{n.d(t,{A:()=>o});var a=n(601),i=n.n(a),s=n(314),r=n.n(s)()(i());r.push([e.id,"/* CSS Custom Properties */\n:root {\n    --primary-color: 210 79% 46%; /* #2563eb */\n    --primary-dark: 217 91% 60%; /* #3b82f6 */\n    --secondary-color: 210 11% 98%; /* #f8fafc */\n    --accent-color: 34 100% 50%; /* #ffa500 */\n    --text-color: 210 11% 15%; /* #1e293b */\n    --text-light: 210 11% 71%; /* #64748b */\n    --border-color: 210 11% 91%; /* #e2e8f0 */\n    --success-color: 142 76% 36%; /* #16a34a */\n    --error-color: 0 84% 60%; /* #ef4444 */\n    --warning-color: 45 93% 47%; /* #eab308 */\n    --shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1);\n    --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1);\n    --radius: 0.5rem;\n    --radius-lg: 1rem;\n    --transition: all 0.3s ease;\n}\n\n/* Reset and Base Styles */\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    background: linear-gradient(135deg, hsl(var(--secondary-color)), hsl(210 11% 96%));\n    color: hsl(var(--text-color));\n    line-height: 1.6;\n    min-height: 100vh;\n}\n\n.container {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 0 1rem;\n}\n\n/* Header Styles */\n.header {\n    background: white;\n    box-shadow: var(--shadow);\n    border-bottom: 1px solid hsl(var(--border-color));\n    position: sticky;\n    top: 0;\n    z-index: 100;\n}\n\n.header .container {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 1rem;\n}\n\n.nav-brand {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    font-size: 1.5rem;\n    font-weight: bold;\n    color: hsl(var(--primary-color));\n}\n\n.nav-brand i {\n    font-size: 2rem;\n}\n\n.nav-menu {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\n.nav-link {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    padding: 0.75rem 1rem;\n    text-decoration: none;\n    color: hsl(var(--text-light));\n    border-radius: var(--radius);\n    transition: var(--transition);\n}\n\n.nav-link:hover,\n.nav-link.active {\n    background: hsl(var(--primary-color));\n    color: white;\n}\n\n.logout-btn {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    padding: 0.75rem 1rem;\n    background: hsl(var(--error-color));\n    color: white;\n    border: none;\n    border-radius: var(--radius);\n    cursor: pointer;\n    transition: var(--transition);\n}\n\n.logout-btn:hover {\n    background: hsl(0 84% 50%);\n}\n\n/* Main Content */\n.main-content {\n    padding: 2rem 0;\n    min-height: calc(100vh - 80px);\n}\n\n/* Form Styles */\n.form-group {\n    margin-bottom: 1.5rem;\n}\n\n.form-label {\n    display: block;\n    margin-bottom: 0.5rem;\n    font-weight: 500;\n    color: hsl(var(--text-color));\n}\n\n.form-input,\n.form-select,\n.form-textarea {\n    width: 100%;\n    padding: 0.75rem;\n    border: 1px solid hsl(var(--border-color));\n    border-radius: var(--radius);\n    font-size: 1rem;\n    transition: var(--transition);\n}\n\n.form-input:focus,\n.form-select:focus,\n.form-textarea:focus {\n    outline: none;\n    border-color: hsl(var(--primary-color));\n    box-shadow: 0 0 0 3px hsl(var(--primary-color) / 0.1);\n}\n\n.form-textarea {\n    min-height: 100px;\n    resize: vertical;\n}\n\n/* Button Styles */\n.btn {\n    display: inline-flex;\n    align-items: center;\n    gap: 0.5rem;\n    padding: 0.75rem 1.5rem;\n    font-size: 1rem;\n    font-weight: 500;\n    text-decoration: none;\n    border: none;\n    border-radius: var(--radius);\n    cursor: pointer;\n    transition: var(--transition);\n}\n\n.btn-primary {\n    background: hsl(var(--primary-color));\n    color: white;\n}\n\n.btn-primary:hover {\n    background: hsl(var(--primary-dark));\n}\n\n.btn-secondary {\n    background: hsl(var(--border-color));\n    color: hsl(var(--text-color));\n}\n\n.btn-secondary:hover {\n    background: hsl(210 11% 85%);\n}\n\n.btn-success {\n    background: hsl(var(--success-color));\n    color: white;\n}\n\n.btn-success:hover {\n    background: hsl(142 76% 30%);\n}\n\n.btn-danger {\n    background: hsl(var(--error-color));\n    color: white;\n}\n\n.btn-danger:hover {\n    background: hsl(0 84% 50%);\n}\n\n.btn-warning {\n    background: hsl(var(--warning-color));\n    color: white;\n}\n\n.btn-warning:hover {\n    background: hsl(45 93% 40%);\n}\n\n/* Card Styles */\n.card {\n    background: white;\n    border-radius: var(--radius-lg);\n    padding: 2rem;\n    box-shadow: var(--shadow);\n    margin-bottom: 2rem;\n}\n\n.card-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 1.5rem;\n    padding-bottom: 1rem;\n    border-bottom: 1px solid hsl(var(--border-color));\n}\n\n.card-title {\n    font-size: 1.5rem;\n    font-weight: bold;\n    color: hsl(var(--text-color));\n}\n\n/* Login Page Styles */\n.login-container {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    min-height: 100vh;\n    padding: 2rem;\n}\n\n.login-card {\n    width: 100%;\n    max-width: 400px;\n    background: white;\n    border-radius: var(--radius-lg);\n    padding: 2rem;\n    box-shadow: var(--shadow-lg);\n}\n\n.login-header {\n    text-align: center;\n    margin-bottom: 2rem;\n}\n\n.login-header i {\n    font-size: 3rem;\n    color: hsl(var(--primary-color));\n    margin-bottom: 1rem;\n}\n\n.login-header h1 {\n    color: hsl(var(--text-color));\n    margin-bottom: 0.5rem;\n}\n\n.login-header p {\n    color: hsl(var(--text-light));\n}\n\n/* Table Styles */\n.patients-table {\n    width: 100%;\n    border-collapse: collapse;\n    background: white;\n    border-radius: var(--radius);\n    overflow: hidden;\n    box-shadow: var(--shadow);\n    margin-top: 1rem;\n}\n\n.patients-table th,\n.patients-table td {\n    padding: 1rem;\n    text-align: left;\n    border-bottom: 1px solid hsl(var(--border-color));\n}\n\n.patients-table th {\n    background: hsl(var(--secondary-color));\n    font-weight: 600;\n    color: hsl(var(--text-color));\n}\n\n.patients-table tr:hover {\n    background: hsl(var(--secondary-color));\n}\n\n.patients-table .patient-photo {\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    object-fit: cover;\n    background: hsl(var(--border-color));\n}\n\n/* Search and Filter Styles */\n.search-filter-section {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n    gap: 1rem;\n    margin-bottom: 1rem;\n}\n\n/* Patient List Styles */\n.patient-card {\n    background: white;\n    border-radius: var(--radius);\n    padding: 1.5rem;\n    box-shadow: var(--shadow);\n    margin-bottom: 1rem;\n    transition: var(--transition);\n}\n\n.patient-card:hover {\n    box-shadow: var(--shadow-lg);\n}\n\n.patient-header {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n    margin-bottom: 1rem;\n}\n\n.patient-avatar {\n    width: 60px;\n    height: 60px;\n    border-radius: 50%;\n    background: hsl(var(--primary-color));\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: white;\n    font-size: 1.5rem;\n    font-weight: bold;\n}\n\n.patient-info {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n    gap: 1rem;\n}\n\n.info-item {\n    display: flex;\n    flex-direction: column;\n    gap: 0.25rem;\n}\n\n.info-label {\n    font-weight: 500;\n    color: hsl(var(--text-light));\n    font-size: 0.875rem;\n}\n\n.info-value {\n    font-size: 1rem;\n    color: hsl(var(--text-color));\n}\n\n/* Status badges */\n.status-badge {\n    padding: 0.25rem 0.75rem;\n    border-radius: 9999px;\n    font-size: 0.75rem;\n    font-weight: 500;\n}\n\n.status-active {\n    background: hsl(var(--success-color) / 0.1);\n    color: hsl(var(--success-color));\n}\n\n.status-inactive {\n    background: hsl(var(--error-color) / 0.1);\n    color: hsl(var(--error-color));\n}\n\n/* Face Recognition Styles */\n.camera-container {\n    position: relative;\n    background: #000;\n    border-radius: var(--radius-lg);\n    overflow: hidden;\n    margin-bottom: 1rem;\n}\n\n.camera-preview {\n    width: 100%;\n    height: 400px;\n    object-fit: cover;\n}\n\n.camera-placeholder {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 400px;\n    background: hsl(210 11% 15%);\n    color: white;\n    flex-direction: column;\n    gap: 1rem;\n}\n\n.camera-placeholder i {\n    font-size: 4rem;\n    opacity: 0.5;\n}\n\n.capture-btn {\n    position: absolute;\n    bottom: 1rem;\n    left: 50%;\n    transform: translateX(-50%);\n    width: 60px;\n    height: 60px;\n    border-radius: 50%;\n    background: white;\n    border: 3px solid hsl(var(--primary-color));\n    cursor: pointer;\n    transition: var(--transition);\n}\n\n.capture-btn:hover {\n    background: hsl(var(--primary-color));\n    color: white;\n}\n\n.captured-image {\n    width: 100%;\n    height: 400px;\n    object-fit: cover;\n    border-radius: var(--radius-lg);\n}\n\n.recognition-result {\n    padding: 1rem;\n    border-radius: var(--radius);\n    margin: 1rem 0;\n    text-align: center;\n}\n\n.recognition-result.success {\n    background: hsl(var(--success-color) / 0.1);\n    border: 1px solid hsl(var(--success-color));\n    color: hsl(var(--success-color));\n}\n\n.recognition-result.pending {\n    background: hsl(var(--warning-color) / 0.1);\n    border: 1px solid hsl(var(--warning-color));\n    color: hsl(var(--warning-color));\n}\n\n/* Queue Styles */\n.queue-stats {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n    gap: 1rem;\n    margin-bottom: 2rem;\n}\n\n.stat-card {\n    background: white;\n    border-radius: var(--radius);\n    padding: 1.5rem;\n    text-align: center;\n    box-shadow: var(--shadow);\n}\n\n.stat-number {\n    font-size: 2rem;\n    font-weight: bold;\n    color: hsl(var(--primary-color));\n    margin-bottom: 0.5rem;\n}\n\n.stat-label {\n    color: hsl(var(--text-light));\n    font-size: 0.875rem;\n}\n\n.queue-table {\n    width: 100%;\n    border-collapse: collapse;\n    background: white;\n    border-radius: var(--radius);\n    overflow: hidden;\n    box-shadow: var(--shadow);\n}\n\n.queue-table th,\n.queue-table td {\n    padding: 1rem;\n    text-align: left;\n    border-bottom: 1px solid hsl(var(--border-color));\n}\n\n.queue-table th {\n    background: hsl(var(--secondary-color));\n    font-weight: 600;\n    color: hsl(var(--text-color));\n}\n\n.queue-table tr:hover {\n    background: hsl(var(--secondary-color));\n}\n\n.status-waiting {\n    background: hsl(var(--warning-color) / 0.1);\n    color: hsl(var(--warning-color));\n}\n\n.status-examining {\n    background: hsl(var(--primary-color) / 0.1);\n    color: hsl(var(--primary-color));\n}\n\n.status-completed {\n    background: hsl(var(--success-color) / 0.1);\n    color: hsl(var(--success-color));\n}\n\n/* Dashboard Styles */\n.dashboard-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n    gap: 2rem;\n    margin-bottom: 2rem;\n}\n\n.quick-actions {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n    gap: 1rem;\n    margin-top: 2rem;\n}\n\n.action-card {\n    background: white;\n    border-radius: var(--radius);\n    padding: 1.5rem;\n    text-align: center;\n    text-decoration: none;\n    color: hsl(var(--text-color));\n    box-shadow: var(--shadow);\n    transition: var(--transition);\n}\n\n.action-card:hover {\n    transform: translateY(-2px);\n    box-shadow: var(--shadow-lg);\n}\n\n.action-card i {\n    font-size: 2rem;\n    color: hsl(var(--primary-color));\n    margin-bottom: 1rem;\n}\n\n.action-card h3 {\n    font-size: 1rem;\n    margin-bottom: 0.5rem;\n}\n\n.action-card p {\n    font-size: 0.875rem;\n    color: hsl(var(--text-light));\n}\n\n/* Medical History Styles */\n.medical-history {\n    margin-top: 2rem;\n}\n\n.history-item {\n    background: hsl(var(--secondary-color));\n    border-radius: var(--radius);\n    padding: 1rem;\n    margin-bottom: 1rem;\n    border-left: 4px solid hsl(var(--primary-color));\n}\n\n.history-date {\n    font-size: 0.875rem;\n    color: hsl(var(--text-light));\n    margin-bottom: 0.5rem;\n}\n\n.history-doctor {\n    font-weight: 500;\n    color: hsl(var(--primary-color));\n    margin-bottom: 0.5rem;\n}\n\n.history-complaint {\n    color: hsl(var(--text-color));\n    line-height: 1.5;\n}\n\n/* Modal Styles */\n.modal-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.5);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 1000;\n    padding: 1rem;\n}\n\n.modal {\n    background: white;\n    border-radius: var(--radius-lg);\n    max-width: 500px;\n    width: 100%;\n    max-height: 90vh;\n    overflow-y: auto;\n    box-shadow: var(--shadow-lg);\n}\n\n.modal-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 1.5rem;\n    border-bottom: 1px solid hsl(var(--border-color));\n}\n\n.modal-header h3 {\n    color: hsl(var(--text-color));\n}\n\n.modal-close {\n    background: none;\n    border: none;\n    font-size: 1.5rem;\n    color: hsl(var(--text-light));\n    cursor: pointer;\n    padding: 0.25rem;\n    border-radius: var(--radius);\n    transition: var(--transition);\n}\n\n.modal-close:hover {\n    background: hsl(var(--border-color));\n}\n\n.modal-body {\n    padding: 1.5rem;\n}\n\n.modal-footer {\n    display: flex;\n    justify-content: flex-end;\n    gap: 1rem;\n    padding: 1.5rem;\n    border-top: 1px solid hsl(var(--border-color));\n}\n\n/* Loading Spinner */\n.loading-spinner {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(255, 255, 255, 0.9);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 999;\n}\n\n.spinner {\n    text-align: center;\n    color: hsl(var(--primary-color));\n}\n\n.spinner i {\n    font-size: 2rem;\n    margin-bottom: 1rem;\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n    .nav-menu {\n        flex-direction: column;\n        gap: 0.5rem;\n        width: 100%;\n    }\n\n    .header .container {\n        flex-direction: column;\n        gap: 1rem;\n    }\n\n    .patient-info {\n        grid-template-columns: 1fr;\n    }\n\n    .patients-table {\n        font-size: 0.875rem;\n    }\n\n    .patients-table th,\n    .patients-table td {\n        padding: 0.75rem 0.5rem;\n    }\n\n    .modal {\n        margin: 1rem;\n    }\n\n    .search-filter-section {\n        grid-template-columns: 1fr;\n    }\n}\n\n/* Utility Classes */\n.text-center {\n    text-align: center;\n}\n\n.text-left {\n    text-align: left;\n}\n\n.text-right {\n    text-align: right;\n}\n\n.mb-0 {\n    margin-bottom: 0;\n}\n\n.mb-1 {\n    margin-bottom: 0.5rem;\n}\n\n.mb-2 {\n    margin-bottom: 1rem;\n}\n\n.mb-3 {\n    margin-bottom: 1.5rem;\n}\n\n.mt-0 {\n    margin-top: 0;\n}\n\n.mt-1 {\n    margin-top: 0.5rem;\n}\n\n.mt-2 {\n    margin-top: 1rem;\n}\n\n.mt-3 {\n    margin-top: 1.5rem;\n}\n\n.hidden {\n    display: none !important;\n}\n\n.fade-in {\n    animation: fadeIn 0.3s ease-in;\n}\n\n@keyframes fadeIn {\n    from {\n        opacity: 0;\n        transform: translateY(10px);\n    }\n    to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n}",""]);const o=r},314:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",a=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),a&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),a&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,a,i,s){"string"==typeof e&&(e=[[null,e,void 0]]);var r={};if(a)for(var o=0;o<this.length;o++){var l=this[o][0];null!=l&&(r[l]=!0)}for(var d=0;d<e.length;d++){var c=[].concat(e[d]);a&&r[c[0]]||(void 0!==s&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=s),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),i&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=i):c[4]="".concat(i)),t.push(c))}},t}},411:(e,t,n)=>{n.r(t),n.d(t,{addDoctor:()=>c,addPatient:()=>s,addQueue:()=>h,deleteDoctor:()=>m,getDoctors:()=>d,getPatients:()=>r,getQueues:()=>l,getUsers:()=>o,loginUser:()=>i,updateDoctor:()=>u,updateQueue:()=>p});const a="https://backend-mediface.vercel.app/api";async function i(e){try{const t=await fetch(`${a}/auth/login`,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify(e)});if(!t.ok){const e=await t.json();throw new Error(e.message||"Login gagal")}return(await t.json()).token}catch(e){if(e instanceof TypeError&&"Failed to fetch"===e.message)throw new Error("Gagal menghubungi server. Periksa koneksi jaringan atau konfigurasi CORS.");throw e}}async function s(e,t){try{const n=await fetch(`${a}/patients`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`},body:JSON.stringify(e)});if(!n.ok){const e=await n.json();throw new Error(e.message||"Gagal menambahkan pasien")}return await n.json()}catch(e){if(e instanceof TypeError&&"Failed to fetch"===e.message)throw new Error("Gagal menghubungi server. Periksa koneksi jaringan atau konfigurasi CORS.");throw e}}async function r(e){try{const t=await fetch(`${a}/patients`,{method:"GET",headers:{Authorization:`Bearer ${e}`}});if(!t.ok){const e=await t.json();throw new Error(e.message||"Gagal mengambil data pasien")}return await t.json()}catch(e){if(e instanceof TypeError&&"Failed to fetch"===e.message)throw new Error("Gagal menghubungi server. Periksa koneksi jaringan atau konfigurasi CORS.");throw e}}async function o(e){try{const t=await fetch(`${a}/users`,{method:"GET",headers:{Authorization:`Bearer ${e}`}});if(!t.ok){const e=await t.json();throw new Error(e.message||"Gagal mengambil data user")}return await t.json()}catch(e){if(e instanceof TypeError&&"Failed to fetch"===e.message)throw new Error("Gagal menghubungi server. Periksa koneksi jaringan atau konfigurasi CORS.");throw e}}async function l(e){try{const t=await fetch(`${a}/queues`,{method:"GET",headers:{Authorization:`Bearer ${e}`}});if(!t.ok){const e=await t.json();throw new Error(e.message||"Gagal mengambil data antrian")}return await t.json()}catch(e){if(e instanceof TypeError&&"Failed to fetch"===e.message)throw new Error("Gagal menghubungi server. Periksa koneksi jaringan atau konfigurasi CORS.");throw e}}async function d(e){try{const t=await fetch(`${a}/doctors`,{method:"GET",headers:{Authorization:`Bearer ${e}`}});if(!t.ok){const e=await t.json();throw new Error(e.message||"Gagal mengambil data dokter")}return await t.json()}catch(e){if(e instanceof TypeError&&"Failed to fetch"===e.message)throw new Error("Gagal menghubungi server. Periksa koneksi jaringan atau konfigurasi CORS.");throw e}}async function c(e,t){try{const n=await fetch(`${a}/doctors`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`},body:JSON.stringify(e)});if(!n.ok){const e=await n.json();throw new Error(e.message||"Gagal menambahkan dokter")}return await n.json()}catch(e){if(e instanceof TypeError&&"Failed to fetch"===e.message)throw new Error("Gagal menghubungi server. Periksa koneksi jaringan atau konfigurasi CORS.");throw e}}async function u(e,t,n){try{const i=await fetch(`${a}/doctors/${e}`,{method:"PUT",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n}`},body:JSON.stringify(t)});if(!i.ok){const e=await i.json();throw new Error(e.message||"Gagal memperbarui data dokter")}return await i.json()}catch(e){if(e instanceof TypeError&&"Failed to fetch"===e.message)throw new Error("Gagal menghubungi server. Periksa koneksi jaringan atau konfigurasi CORS.");throw e}}async function m(e,t){try{const n=await fetch(`${a}/doctors/${e}`,{method:"DELETE",headers:{Authorization:`Bearer ${t}`}});if(!n.ok){const e=await n.json();throw new Error(e.message||"Gagal menghapus dokter")}return await n.json()}catch(e){if(e instanceof TypeError&&"Failed to fetch"===e.message)throw new Error("Gagal menghubungi server. Periksa koneksi jaringan atau konfigurasi CORS.");throw e}}async function h(e,t){try{const n=await fetch(`${a}/queues`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`},body:JSON.stringify(e)});if(!n.ok){const e=await n.json();throw new Error(e.message||"Gagal menambahkan antrian")}return await n.json()}catch(e){if(e instanceof TypeError&&"Failed to fetch"===e.message)throw new Error("Gagal menghubungi server. Periksa koneksi jaringan atau konfigurasi CORS.");throw e}}async function p(e,t,n){try{const i=await fetch(`${a}/queues/${e}`,{method:"PUT",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n}`},body:JSON.stringify(t)});if(!i.ok){const e=await i.json();throw new Error(e.message||"Gagal memperbarui data antrian")}return await i.json()}catch(e){if(e instanceof TypeError&&"Failed to fetch"===e.message)throw new Error("Gagal menghubungi server. Periksa koneksi jaringan atau konfigurasi CORS.");throw e}}},540:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},601:e=>{e.exports=function(e){return e[1]}},659:e=>{var t={};e.exports=function(e,n){var a=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(n)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var a="";n.supports&&(a+="@supports (".concat(n.supports,") {")),n.media&&(a+="@media ".concat(n.media," {"));var i=void 0!==n.layer;i&&(a+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),a+=n.css,i&&(a+="}"),n.media&&(a+="}"),n.supports&&(a+="}");var s=n.sourceMap;s&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),t.styleTagTransform(a,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}}},t={};function n(a){var i=t[a];if(void 0!==i)return i.exports;var s=t[a]={id:a,exports:{}};return e[a](s,s.exports,n),s.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nc=void 0;var a=n(72),i=n.n(a),s=n(825),r=n.n(s),o=n(659),l=n.n(o),d=n(56),c=n.n(d),u=n(540),m=n.n(u),h=n(113),p=n.n(h),g=n(249),v={};v.styleTagTransform=p(),v.setAttributes=c(),v.insert=l().bind(null,"head"),v.domAPI=r(),v.insertStyleElement=m(),i()(g.A,v),g.A&&g.A.locals&&g.A.locals;const f={init(){this.get("initialized")||(this.set("initialized",!0),this.set("patients",[]),this.set("queue",[]),this.set("doctors",[]))},get(e){try{const t=localStorage.getItem(e);return t?JSON.parse(t):null}catch(e){return console.error("Error reading from localStorage:",e),null}},set(e,t){try{return localStorage.setItem(e,JSON.stringify(t)),!0}catch(e){return console.error("Error writing to localStorage:",e),!1}},remove(e){try{return localStorage.removeItem(e),!0}catch(e){return console.error("Error removing from localStorage:",e),!1}},clear(){try{return localStorage.clear(),!0}catch(e){return console.error("Error clearing localStorage:",e),!1}},getKeys(){try{return Object.keys(localStorage)}catch(e){return console.error("Error getting localStorage keys:",e),[]}},has:e=>null!==localStorage.getItem(e),getSize(){try{let e=0;for(let t in localStorage)localStorage.hasOwnProperty(t)&&(e+=localStorage[t].length+t.length);return e}catch(e){return console.error("Error calculating storage size:",e),0}},exportData(){try{const e={};for(let t in localStorage)localStorage.hasOwnProperty(t)&&(e[t]=this.get(t));return e}catch(e){return console.error("Error exporting data:",e),{}}},importData(e){try{for(let t in e)e.hasOwnProperty(t)&&this.set(t,e[t]);return!0}catch(e){return console.error("Error importing data:",e),!1}}},b={async start(e){try{if(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)throw new Error("Camera tidak didukung di browser ini");const t=await navigator.mediaDevices.getUserMedia({video:{width:{ideal:640},height:{ideal:480},facingMode:"user"},audio:!1}),n=document.getElementById(e);if(!n)throw new Error("Video element tidak ditemukan");return n.srcObject=t,await new Promise(((e,t)=>{n.onloadedmetadata=e,n.onerror=t,setTimeout((()=>t(new Error("Timeout menunggu kamera"))),1e4)})),t}catch(e){console.error("Error starting camera:",e);let t="Gagal mengakses kamera";throw"NotAllowedError"===e.name?t="Akses kamera ditolak. Silakan izinkan akses kamera di browser.":"NotFoundError"===e.name?t="Kamera tidak ditemukan di perangkat ini.":"NotReadableError"===e.name?t="Kamera sedang digunakan oleh aplikasi lain.":"OverconstrainedError"===e.name?t="Kamera tidak mendukung resolusi yang diminta.":e.message&&(t=e.message),new Error(t)}},stop(e){try{e&&e.getTracks().forEach((e=>{e.stop()}))}catch(e){console.error("Error stopping camera:",e)}},capture(e,t,n=.8){try{const a=document.getElementById(e),i=document.getElementById(t);if(!a||!i)throw new Error("Video atau canvas element tidak ditemukan");const s=a.videoWidth,r=a.videoHeight;if(0===s||0===r)throw new Error("Video belum siap untuk capture");return i.width=s,i.height=r,i.getContext("2d").drawImage(a,0,0,s,r),i.toDataURL("image/jpeg",n)}catch(e){throw console.error("Error capturing image:",e),new Error("Gagal mengambil foto: "+e.message)}},async checkAvailability(){try{if(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)return!1;return(await navigator.mediaDevices.enumerateDevices()).filter((e=>"videoinput"===e.kind)).length>0}catch(e){return console.error("Error checking camera availability:",e),!1}},async getAvailableCameras(){try{if(!navigator.mediaDevices||!navigator.mediaDevices.enumerateDevices)return[];const e=(await navigator.mediaDevices.enumerateDevices()).filter((e=>"videoinput"===e.kind));return e.map((t=>({deviceId:t.deviceId,label:t.label||`Camera ${e.indexOf(t)+1}`,groupId:t.groupId})))}catch(e){return console.error("Error getting available cameras:",e),[]}},async startWithDevice(e,t){try{const n=await navigator.mediaDevices.getUserMedia({video:{deviceId:{exact:t},width:{ideal:640},height:{ideal:480}},audio:!1}),a=document.getElementById(e);if(!a)throw new Error("Video element tidak ditemukan");return a.srcObject=n,await new Promise(((e,t)=>{a.onloadedmetadata=e,a.onerror=t,setTimeout((()=>t(new Error("Timeout"))),1e4)})),n}catch(e){throw console.error("Error starting camera with device:",e),new Error("Gagal mengakses kamera yang dipilih: "+e.message)}},async requestPermissions(){try{const e=await navigator.mediaDevices.getUserMedia({video:!0,audio:!1});return this.stop(e),!0}catch(e){return console.error("Error requesting camera permissions:",e),!1}}};class y{constructor(){this.routes={},this.defaultRoute=null,this.params={}}addRoute(e,t){this.routes[e]=t}setDefaultRoute(e){this.defaultRoute=e}navigate(e,t={}){this.params=t,history.pushState({path:e,params:t},"",`#${e}`),this.executeRoute(e)}executeRoute(e){const t=this.routes[e];t?t():this.defaultRoute&&this.defaultRoute()}start(){window.addEventListener("popstate",(e=>{if(e.state&&e.state.path)this.params=e.state.params||{},this.executeRoute(e.state.path);else{const e=window.location.hash.slice(1);e?this.executeRoute(e):this.defaultRoute&&this.defaultRoute()}}));const e=window.location.hash.slice(1);e?this.executeRoute(e):this.defaultRoute&&this.defaultRoute()}getParams(){return this.params}getCurrentPath(){return window.location.hash.slice(1)}}const w={render:()=>'\n            <div class="login-container">\n                <div class="login-card fade-in">\n                    <div class="login-header">\n                        <i class="fas fa-user-md"></i>\n                        <h1>Sistem Rumah Sakit</h1>\n                        <p>Silakan login untuk melanjutkan</p>\n                    </div>\n                    <form id="loginForm">\n                        <div class="form-group">\n                            <label class="form-label" for="username">Username</label>\n                            <input \n                                type="text" \n                                id="username" \n                                name="username" \n                                class="form-input" \n                                placeholder="Masukkan username"\n                                required\n                            >\n                        </div>\n                        <div class="form-group">\n                            <label class="form-label" for="password">Password</label>\n                            <input \n                                type="password" \n                                id="password" \n                                name="password" \n                                class="form-input" \n                                placeholder="Masukkan password"\n                                required\n                            >\n                        </div>\n                        <button type="submit" class="btn btn-primary" style="width: 100%;">\n                            <i class="fas fa-sign-in-alt"></i>\n                            Login\n                        </button>\n                    </form>\n                    <div class="mt-3 text-center">\n                        <small style="color: #64748b;">\n                            Demo: username: <strong>receptionist</strong>, password: <strong>hospital123</strong>\n                        </small>\n                    </div>\n                </div>\n            </div>\n        ',init(e){const t=document.getElementById("loginForm"),n=document.getElementById("username"),a=document.getElementById("password");t.addEventListener("submit",(async t=>{t.preventDefault();const i={username:n.value.trim(),password:a.value.trim()};if(i.username&&i.password)try{await e.login(i),e.router.navigate("dashboard")}catch(t){e.showNotification(t.message,"error")}else e.showNotification("Harap isi semua field","error")})),n.focus()}};var k=n(411);const x={users:[],patients:[],doctors:[],queues:[],async fetchData(e){try{this.users=await(0,k.getUsers)(e),this.patients=await(0,k.getPatients)(e),this.doctors=await(0,k.getDoctors)(e),this.queues=await(0,k.getQueues)(e)}catch(e){console.error("Gagal mengambil data dashboard:",e),this.users=[],this.patients=[],this.doctors=[],this.queues=[]}},render(){const e=this.getStats();return`\n        <div class="fade-in">\n            <div class="card">\n                <div class="card-header">\n                    <h2 class="card-title">\n                        <i class="fas fa-tachometer-alt"></i>\n                        Dashboard\n                    </h2>\n                    <p style="margin: 0; color: #64748b;">\n                        Selamat datang di Sistem Manajemen Pasien Rumah Sakit\n                    </p>\n                </div>\n\n                <div class="queue-stats">\n                    <div class="stat-card">\n                        <div class="stat-number">${e.totalPatients}</div>\n                        <div class="stat-label">Total Pasien</div>\n                    </div>\n                    <div class="stat-card">\n                        <div class="stat-number">${e.queueToday}</div>\n                        <div class="stat-label">Antrian Hari Ini</div>\n                    </div>\n                    <div class="stat-card">\n                        <div class="stat-number">${e.activeDoctors}</div>\n                        <div class="stat-label">Dokter Aktif</div>\n                    </div>\n                    <div class="stat-card">\n                        <div class="stat-number">${e.completedToday}</div>\n                        <div class="stat-label">Selesai Hari Ini</div>\n                    </div>\n                </div>\n            </div>\n\n            <div class="dashboard-grid">\n                <div class="card">\n                    <div class="card-header">\n                        <h3 class="card-title">\n                            <i class="fas fa-clock"></i>\n                            Antrian Terbaru\n                        </h3>\n                    </div>\n                    <div id="recentQueue">\n                        ${this.renderRecentQueue()}\n                    </div>\n                </div>\n\n                <div class="card">\n                    <div class="card-header">\n                        <h3 class="card-title">\n                            <i class="fas fa-user-md"></i>\n                            Status Dokter\n                        </h3>\n                    </div>\n                    <div id="doctorStatus">\n                        ${this.renderDoctorStatus()}\n                    </div>\n                </div>\n            </div>\n\n            <div class="card">\n                <div class="card-header">\n                    <h3 class="card-title">\n                        <i class="fas fa-bolt"></i>\n                        Aksi Cepat\n                    </h3>\n                </div>\n                <div class="quick-actions">\n                    <a href="#face-recognition" class="action-card" data-route="face-recognition">\n                        <i class="fas fa-camera"></i>\n                        <h3>Face Recognition</h3>\n                        <p>Identifikasi pasien dengan wajah</p>\n                    </a>\n                    <a href="#add-patient" class="action-card" data-route="add-patient">\n                        <i class="fas fa-user-plus"></i>\n                        <h3>Tambah Pasien</h3>\n                        <p>Daftarkan pasien baru</p>\n                    </a>\n                    <a href="#queue" class="action-card" data-route="queue">\n                        <i class="fas fa-list-ol"></i>\n                        <h3>Kelola Antrian</h3>\n                        <p>Lihat dan kelola antrian</p>\n                    </a>\n                </div>\n            </div>\n        </div>\n    `},getStats(){const e=(new Date).toDateString(),t=this.queues.filter((t=>new Date(t.timestamp).toDateString()===e)),n=t.filter((e=>"completed"===e.status));return{totalPatients:this.patients.length,queueToday:t.length,activeDoctors:this.doctors.filter((e=>"available"===e.status)).length,completedToday:n.length}},renderRecentQueue(){const e=this.queues.sort(((e,t)=>new Date(t.timestamp)-new Date(e.timestamp))).slice(0,5);return 0===e.length?'<p style="color: #64748b; text-align: center; padding: 2rem;">Belum ada antrian hari ini</p>':e.map((e=>`\n        <div class="history-item" style="margin-bottom: 1rem;">\n            <div class="history-date">${new Date(e.timestamp).toLocaleString("id-ID")}</div>\n            <div class="history-doctor">${e.patientName}</div>\n            <div class="history-complaint">\n                Dr. ${e.doctorName} - \n                <span class="status-badge status-${"waiting"===e.status?"waiting":"examining"===e.status?"examining":"completed"}">\n                    ${"waiting"===e.status?"Menunggu":"examining"===e.status?"Diperiksa":"Selesai"}\n                </span>\n            </div>\n        </div>\n    `)).join("")},renderDoctorStatus(){return this.doctors.map((e=>{const t=this.queues.filter((t=>t.doctorId===e.id&&"completed"!==t.status)),n=this.queues.find((t=>t.doctorId===e.id&&"examining"===t.status));return`\n            <div class="info-item" style="margin-bottom: 1rem; padding: 1rem; background: #f8fafc; border-radius: 0.5rem;">\n                <div class="info-label">Dr. ${e.name}</div>\n                <div class="info-value">${e.specialty}</div>\n                <div style="margin-top: 0.5rem;">\n                    <span class="status-badge ${"available"===e.status?"status-waiting":"status-examining"}">\n                        ${"available"===e.status?"Tersedia":"Sibuk"}\n                    </span>\n                    <small style="margin-left: 0.5rem; color: #64748b;">\n                        ${t.length} antrian\n                    </small>\n                </div>\n                ${n?`\n                    <div style="margin-top: 0.5rem; font-size: 0.875rem; color: #3b82f6;">\n                        Memeriksa: ${n.patientName}\n                    </div>\n                `:""}\n            </div>\n        `})).join("")},async init(e){this.app=e;const t=this.app.currentUser.token;await this.fetchData(t),this.refreshInterval=setInterval((async()=>{await this.fetchData(t);const e=document.getElementById("recentQueue"),n=document.getElementById("doctorStatus");e&&(e.innerHTML=this.renderRecentQueue()),n&&(n.innerHTML=this.renderDoctorStatus())}),3e4)},destroy(){this.refreshInterval&&clearInterval(this.refreshInterval)}},E={render:()=>'\n            <div class="fade-in">\n                <div class="card">\n                    <div class="card-header">\n                        <h2 class="card-title">\n                            <i class="fas fa-camera"></i>\n                            Face Recognition\n                        </h2>\n                        <p style="margin: 0; color: #64748b;">\n                            Identifikasi pasien menggunakan teknologi pengenalan wajah\n                        </p>\n                    </div>\n\n                    <div id="cameraSection">\n                        <div class="camera-container">\n                            <div class="camera-placeholder" id="cameraPlaceholder">\n                                <i class="fas fa-camera"></i>\n                                <p>Klik tombol untuk mulai kamera</p>\n                            </div>\n                            <video id="cameraPreview" class="camera-preview" style="display: none;" autoplay muted></video>\n                            <canvas id="captureCanvas" style="display: none;"></canvas>\n                            <button id="captureBtn" class="capture-btn" style="display: none;">\n                                <i class="fas fa-camera"></i>\n                            </button>\n                        </div>\n\n                        <div style="text-align: center; margin-top: 1rem;">\n                            <button id="startCameraBtn" class="btn btn-primary">\n                                <i class="fas fa-video"></i>\n                                Mulai Kamera\n                            </button>\n                            <button id="stopCameraBtn" class="btn btn-secondary" style="display: none;">\n                                <i class="fas fa-video-slash"></i>\n                                Berhenti\n                            </button>\n                        </div>\n                    </div>\n\n                    <div id="capturedSection" style="display: none;">\n                        <h3>Hasil Capture</h3>\n                        <img id="capturedImage" class="captured-image" alt="Captured Image">\n                        \n                        <div id="recognitionResult" class="recognition-result pending">\n                            <i class="fas fa-spinner fa-spin"></i>\n                            <p>Memproses pengenalan wajah...</p>\n                        </div>\n\n                        <div style="text-align: center; margin-top: 1rem;">\n                            <button id="retakeBtn" class="btn btn-secondary">\n                                <i class="fas fa-redo"></i>\n                                Ambil Ulang\n                            </button>\n                        </div>\n                    </div>\n\n                    <div id="verificationSection" style="display: none;">\n                        <div class="recognition-result success">\n                            <i class="fas fa-check-circle"></i>\n                            <p>Pasien berhasil diidentifikasi!</p>\n                        </div>\n                        \n                        <div class="patient-info">\n                            <div class="info-item">\n                                <div class="info-label">Nama Pasien</div>\n                                <div class="info-value" id="recognizedName">-</div>\n                            </div>\n                            <div class="info-item">\n                                <div class="info-label">NIK</div>\n                                <div class="info-value" id="recognizedNik">-</div>\n                            </div>\n                            <div class="info-item">\n                                <div class="info-label">Tanggal Lahir</div>\n                                <div class="info-value" id="recognizedBirth">-</div>\n                            </div>\n                            <div class="info-item">\n                                <div class="info-label">Confidence Score</div>\n                                <div class="info-value" id="confidenceScore">-</div>\n                            </div>\n                        </div>\n\n                        <div style="text-align: center; margin-top: 2rem;">\n                            <h4>Apakah identifikasi ini benar?</h4>\n                            <div style="margin-top: 1rem;">\n                                <button id="confirmCorrect" class="btn btn-success" style="margin-right: 1rem;">\n                                    <i class="fas fa-check"></i>\n                                    Benar\n                                </button>\n                                <button id="confirmIncorrect" class="btn btn-danger">\n                                    <i class="fas fa-times"></i>\n                                    Salah\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        ',init(e){this.app=e,this.currentStream=null,this.recognizedPatient=null,this.setupEventListeners()},setupEventListeners(){const e=document.getElementById("startCameraBtn"),t=document.getElementById("stopCameraBtn"),n=document.getElementById("captureBtn"),a=document.getElementById("retakeBtn"),i=document.getElementById("confirmCorrect"),s=document.getElementById("confirmIncorrect");e.addEventListener("click",(()=>this.startCamera())),t.addEventListener("click",(()=>this.stopCamera())),n.addEventListener("click",(()=>this.captureImage())),a.addEventListener("click",(()=>this.retakePhoto())),i.addEventListener("click",(()=>this.confirmIdentification(!0))),s.addEventListener("click",(()=>this.confirmIdentification(!1)))},async startCamera(){try{this.currentStream=await b.start("cameraPreview"),document.getElementById("cameraPlaceholder").style.display="none",document.getElementById("cameraPreview").style.display="block",document.getElementById("captureBtn").style.display="block",document.getElementById("startCameraBtn").style.display="none",document.getElementById("stopCameraBtn").style.display="inline-flex"}catch(e){this.app.showNotification("Gagal mengakses kamera: "+e.message,"error")}},stopCamera(){this.currentStream&&(b.stop(this.currentStream),this.currentStream=null),document.getElementById("cameraPlaceholder").style.display="flex",document.getElementById("cameraPreview").style.display="none",document.getElementById("captureBtn").style.display="none",document.getElementById("startCameraBtn").style.display="inline-flex",document.getElementById("stopCameraBtn").style.display="none"},captureImage(){const e=document.getElementById("cameraPreview"),t=document.getElementById("captureCanvas"),n=document.getElementById("capturedImage");t.width=e.videoWidth,t.height=e.videoHeight,t.getContext("2d").drawImage(e,0,0,t.width,t.height);const a=t.toDataURL("image/jpeg",.8);n.src=a,this.stopCamera(),document.getElementById("cameraSection").style.display="none",document.getElementById("capturedSection").style.display="block",this.processFaceRecognition(a)},processFaceRecognition(e){setTimeout((()=>{const e=f.get("patients")||[];if(0!==e.length)if(Math.random()>.3){const t=e[Math.floor(Math.random()*e.length)],n=(85+10*Math.random()).toFixed(1);this.showRecognitionResult(t,n)}else this.showNoMatch();else this.showNoMatch()}),2e3)},showRecognitionResult(e,t){this.recognizedPatient=e,document.getElementById("recognizedName").textContent=e.name,document.getElementById("recognizedNik").textContent=e.nik,document.getElementById("recognizedBirth").textContent=new Date(e.birthDate).toLocaleDateString("id-ID"),document.getElementById("confidenceScore").textContent=t+"%",document.getElementById("capturedSection").style.display="none",document.getElementById("verificationSection").style.display="block"},showNoMatch(){const e=document.getElementById("recognitionResult");e.className="recognition-result",e.style.background="#fef2f2",e.style.borderColor="#f87171",e.style.color="#dc2626",e.innerHTML='\n            <i class="fas fa-exclamation-triangle"></i>\n            <p>Wajah tidak dikenali dalam database</p>\n            <small>Silakan daftarkan sebagai pasien baru</small>\n        ',setTimeout((()=>{e.innerHTML+='\n                <div style="margin-top: 1rem;">\n                    <button class="btn btn-primary" onclick="hospitalApp.router.navigate(\'add-patient\')">\n                        <i class="fas fa-user-plus"></i>\n                        Daftarkan Pasien Baru\n                    </button>\n                </div>\n            '}),1e3)},confirmIdentification(e){e&&this.recognizedPatient?(f.set("currentRecognizedPatient",this.recognizedPatient),this.app.router.navigate("patient-record",{patientId:this.recognizedPatient.id})):(this.app.showNotification("Identifikasi dibatalkan. Silakan coba lagi.","info"),this.retakePhoto())},retakePhoto(){document.getElementById("capturedSection").style.display="none",document.getElementById("verificationSection").style.display="none",document.getElementById("cameraSection").style.display="block";const e=document.getElementById("recognitionResult");e.className="recognition-result pending",e.innerHTML='\n            <i class="fas fa-spinner fa-spin"></i>\n            <p>Memproses pengenalan wajah...</p>\n        '},destroy(){this.currentStream&&b.stop(this.currentStream)}},I={async render(e){const t=this.patient||await this.getPatient(e);if(!t)return'\n                <div class="fade-in">\n                    <div class="card">\n                        <div class="card-header">\n                            <h2 class="card-title">\n                                <i class="fas fa-user"></i>\n                                Rekam Medis Pasien\n                            </h2>\n                        </div>\n                        <div style="text-align: center; padding: 2rem;">\n                            <i class="fas fa-exclamation-triangle" style="font-size: 3rem; color: #f59e0b; margin-bottom: 1rem;"></i>\n                            <h3>Pasien tidak ditemukan</h3>\n                            <p style="color: #64748b;">Data pasien tidak dapat ditemukan dalam sistem.</p>\n                            <button class="btn btn-primary" onclick="hospitalApp.router.navigate(\'dashboard\')">\n                                <i class="fas fa-arrow-left"></i>\n                                Kembali ke Dashboard\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            ';const n=this.getMedicalHistory(t.id);return`\n            <div class="fade-in">\n                <div class="card">\n                    <div class="card-header">\n                        <h2 class="card-title">\n                            <i class="fas fa-user"></i>\n                            Rekam Medis Pasien\n                        </h2>\n                        <button class="btn btn-secondary" onclick="hospitalApp.router.navigate('dashboard')">\n                            <i class="fas fa-arrow-left"></i>\n                            Kembali\n                        </button>\n                    </div>\n\n                    <div class="patient-info">\n                        <div class="info-item">\n                            <div class="info-label">Nama Lengkap</div>\n                            <div class="info-value">${t.name}</div>\n                        </div>\n                        <div class="info-item">\n                            <div class="info-label">NIK</div>\n                            <div class="info-value">${t.nik}</div>\n                        </div>\n                        <div class="info-item">\n                            <div class="info-label">Tanggal Lahir</div>\n                            <div class="info-value">${new Date(t.birthDate).toLocaleDateString("id-ID")}</div>\n                        </div>\n                        <div class="info-item">\n                            <div class="info-label">Umur</div>\n                            <div class="info-value">${this.calculateAge(t.birthDate)} tahun</div>\n                        </div>\n                        <div class="info-item">\n                            <div class="info-label">Jenis Kelamin</div>\n                            <div class="info-value">${"M"===t.gender?"Laki-laki":"Perempuan"}</div>\n                        </div>\n                        <div class="info-item">\n                            <div class="info-label">Alamat</div>\n                            <div class="info-value">${t.address}</div>\n                        </div>\n                        <div class="info-item">\n                            <div class="info-label">No. Telepon</div>\n                            <div class="info-value">${t.phone}</div>\n                        </div>\n                        <div class="info-item">\n                            <div class="info-label">Golongan Darah</div>\n                            <div class="info-value">${t.bloodType||"-"}</div>\n                        </div>\n                    </div>\n\n                    <div class="medical-history">\n                        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem;">\n                            <h3>\n                                <i class="fas fa-history"></i>\n                                Riwayat Kunjungan\n                            </h3>\n                            <span style="color: #64748b; font-size: 0.875rem;">\n                                ${n.length} kunjungan\n                            </span>\n                        </div>\n                        \n                        <div id="medicalHistoryList">\n                            ${this.renderMedicalHistory(n)}\n                        </div>\n                    </div>\n                </div>\n\n                <div class="card">\n                    <div class="card-header">\n                        <h3 class="card-title">\n                            <i class="fas fa-plus-circle"></i>\n                            Tambah Kunjungan Baru\n                        </h3>\n                    </div>\n                    \n                    <form id="newVisitForm">\n                        <div class="form-group">\n                            <label class="form-label" for="doctorSelect">Pilih Dokter</label>\n                            <select id="doctorSelect" class="form-select" required>\n                                <option value="">-- Pilih Dokter --</option>\n                                ${this.renderDoctorOptions()}\n                            </select>\n                        </div>\n                        \n                        <div class="form-group">\n                            <label class="form-label" for="complaint">Keluhan</label>\n                            <textarea \n                                id="complaint" \n                                class="form-textarea" \n                                placeholder="Masukkan keluhan pasien..."\n                                required\n                            ></textarea>\n                        </div>\n                        \n                        <div class="form-group">\n                            <label class="form-label" for="priority">Prioritas</label>\n                            <select id="priority" class="form-select" required>\n                                <option value="normal">Normal</option>\n                                <option value="urgent">Mendesak</option>\n                                <option value="emergency">Darurat</option>\n                            </select>\n                        </div>\n                        \n                        <button type="submit" class="btn btn-primary">\n                            <i class="fas fa-plus"></i>\n                            Tambah ke Antrian\n                        </button>\n                    </form>\n                </div>\n            </div>\n        `},async getPatient(e){const t=f.get("currentRecognizedPatient");if(t)return f.remove("currentRecognizedPatient"),t;if(!e)return null;const a=f.get("patients")||[];let i=a.find((t=>String(t.id)===String(e)));if(!i)try{const t=this.app.currentUser.token,s=await Promise.resolve().then(n.bind(n,411));i=await s.getPatientById(e,t),i&&(a.push(i),f.set("patients",a))}catch(e){console.error("Failed to fetch patient from API:",e)}return i},getMedicalHistory:e=>(f.get("queue")||[]).filter((t=>t.patientId===e&&"completed"===t.status)).sort(((e,t)=>new Date(t.timestamp)-new Date(e.timestamp))),renderMedicalHistory:e=>0===e.length?'\n                <div style="text-align: center; padding: 2rem; color: #64748b;">\n                    <i class="fas fa-clipboard" style="font-size: 2rem; margin-bottom: 1rem; opacity: 0.5;"></i>\n                    <p>Belum ada riwayat kunjungan</p>\n                </div>\n            ':e.map((e=>`\n            <div class="history-item">\n                <div class="history-date">\n                    ${new Date(e.timestamp).toLocaleDateString("id-ID",{weekday:"long",year:"numeric",month:"long",day:"numeric",hour:"2-digit",minute:"2-digit"})}\n                </div>\n                <div class="history-doctor">\n                    <i class="fas fa-user-md"></i>\n                    Dr. ${e.doctorName} - ${e.doctorSpecialty}\n                </div>\n                <div class="history-complaint">\n                    <strong>Keluhan:</strong> ${e.complaint}\n                    ${e.diagnosis?`<br><strong>Diagnosis:</strong> ${e.diagnosis}`:""}\n                    ${e.prescription?`<br><strong>Resep:</strong> ${e.prescription}`:""}\n                </div>\n                ${e.notes?`\n                    <div style="margin-top: 0.5rem; font-size: 0.875rem; color: #64748b;">\n                        <strong>Catatan:</strong> ${e.notes}\n                    </div>\n                `:""}\n            </div>\n        `)).join(""),renderDoctorOptions(){return this.app&&this.app.doctors?this.app.doctors.filter((e=>"available"===e.status)).map((e=>`\n                <option value="${e._id}" data-name="${e.name}" data-specialty="${e.specialty}">\n                    Dr. ${e.name} - ${e.specialty}\n                </option>\n            `)).join(""):""},calculateAge(e){const t=new Date,n=new Date(e);let a=t.getFullYear()-n.getFullYear();const i=t.getMonth()-n.getMonth();return(i<0||0===i&&t.getDate()<n.getDate())&&a--,a},async init(e,t){this.app=e,this.patientId=t,this.patient=await this.getPatient(t),this.patient&&(await this.loadDoctors(),this.setupEventListeners())},async loadDoctors(){try{const e=this.app.currentUser.token,t=await Promise.resolve().then(n.bind(n,411));this.app.doctors=await t.getDoctors(e)}catch(e){this.app.showNotification("Gagal mengambil data dokter: "+e.message,"error"),this.app.doctors=[]}},setupEventListeners(){const e=document.getElementById("newVisitForm");e&&e.addEventListener("submit",(e=>{e.preventDefault(),this.handleNewVisit()}))},async handleNewVisit(){const e=document.getElementById("doctorSelect"),t=document.getElementById("complaint"),a=document.getElementById("priority"),i=t.value.trim(),s=a.value;if(!i)return void this.app.showNotification("Harap isi semua field yang diperlukan","error");const r={normal:1,urgent:2,emergency:3}[s]||1,o=e.value,l=this.app.doctors.find((e=>e._id===o));if(!l)return void this.app.showNotification("Dokter tidak ditemukan","error");const d={patient_id:this.patient._id||this.patient.id,doctor_id:l._id,complaint:i,priority:r,status:"waiting",queueNumber:this.getNextQueueNumber(l._id),examinationStartTime:null,completionTime:null,diagnosis:"",prescription:"",notes:""};console.log("Queue data to send:",d);try{const e=this.app.currentUser.token,t=await Promise.resolve().then(n.bind(n,411)),a=await t.addQueue(d,e);this.app.showModal("Berhasil Ditambahkan",`Pasien ${this.patient.name} telah ditambahkan ke antrian Dr. ${l.name}.\n\nNomor Antrian: ${a.queueNumber}`,(()=>{this.app.router.navigate("queue")}));const i=document.getElementById("newVisitForm");i&&i.reset()}catch(e){console.error("Error adding queue:",e),e.response?e.response.json().then((t=>{this.app.showNotification("Gagal menambahkan antrian: "+(t.message||e.message),"error")})):this.app.showNotification("Gagal menambahkan antrian: "+e.message,"error")}},getNextQueueNumber(e){const t=f.get("queue")||[],n=(new Date).toDateString();return t.filter((t=>t.doctorId===e&&new Date(t.timestamp).toDateString()===n&&"completed"!==t.status)).length+1}},P={render:()=>'\n            <div class="fade-in">\n                <div class="card">\n                    <div class="card-header">\n                        <h2 class="card-title">\n                            <i class="fas fa-user-plus"></i>\n                            Tambah Pasien Baru\n                        </h2>\n                        <button class="btn btn-secondary" onclick="hospitalApp.router.navigate(\'dashboard\')">\n                            <i class="fas fa-arrow-left"></i>\n                            Kembali\n                        </button>\n                    </div>\n\n                    <form id="addPatientForm">\n                        <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 2rem;">\n                            <div>\n                                <h3 style="margin-bottom: 1rem; color: #1e293b;">\n                                    <i class="fas fa-user"></i>\n                                    Informasi Pribadi\n                                </h3>\n                                \n                                <div class="form-group">\n                                    <label class="form-label" for="fullName">Nama Lengkap *</label>\n                                    <input \n                                        type="text" \n                                        id="fullName" \n                                        name="fullName" \n                                        class="form-input" \n                                        placeholder="Masukkan nama lengkap"\n                                        required\n                                    >\n                                </div>\n\n                                <div class="form-group">\n                                    <label class="form-label" for="nik">NIK *</label>\n                                    <input \n                                        type="text" \n                                        id="nik" \n                                        name="nik" \n                                        class="form-input" \n                                        placeholder="Nomor Induk Kependudukan (16 digit)"\n                                        maxlength="16"\n                                        pattern="[0-9]{16}"\n                                        required\n                                    >\n                                </div>\n\n                                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 1rem;">\n                                    <div class="form-group">\n                                        <label class="form-label" for="birthDate">Tanggal Lahir *</label>\n                                        <input \n                                            type="date" \n                                            id="birthDate" \n                                            name="birthDate" \n                                            class="form-input"\n                                            required\n                                        >\n                                    </div>\n\n                                    <div class="form-group">\n                                        <label class="form-label" for="gender">Jenis Kelamin *</label>\n                                        <select id="gender" name="gender" class="form-select" required>\n                                            <option value="">-- Pilih --</option>\n                                            <option value="M">Laki-laki</option>\n                                            <option value="F">Perempuan</option>\n                                        </select>\n                                    </div>\n                                </div>\n\n                                <div class="form-group">\n                                    <label class="form-label" for="bloodType">Golongan Darah</label>\n                                    <select id="bloodType" name="bloodType" class="form-select">\n                                        <option value="">-- Pilih Golongan Darah --</option>\n                                        <option value="A">A</option>\n                                        <option value="B">B</option>\n                                        <option value="AB">AB</option>\n                                        <option value="O">O</option>\n                                    </select>\n                                </div>\n                            </div>\n\n                            <div>\n                                <h3 style="margin-bottom: 1rem; color: #1e293b;">\n                                    <i class="fas fa-address-card"></i>\n                                    Informasi Kontak\n                                </h3>\n\n                                <div class="form-group">\n                                    <label class="form-label" for="phone">No. Telepon *</label>\n                                    <input \n                                        type="tel" \n                                        id="phone" \n                                        name="phone" \n                                        class="form-input" \n                                        placeholder="Contoh: 08123456789"\n                                        pattern="[0-9]{10,13}"\n                                        required\n                                    >\n                                </div>\n\n                                <div class="form-group">\n                                    <label class="form-label" for="email">Email</label>\n                                    <input \n                                        type="email" \n                                        id="email" \n                                        name="email" \n                                        class="form-input" \n                                        placeholder="contoh@email.com"\n                                    >\n                                </div>\n\n                                <div class="form-group">\n                                    <label class="form-label" for="address">Alamat Lengkap *</label>\n                                    <textarea \n                                        id="address" \n                                        name="address" \n                                        class="form-textarea" \n                                        placeholder="Masukkan alamat lengkap"\n                                        required\n                                    ></textarea>\n                                </div>\n\n                                <div class="form-group">\n                                    <label class="form-label" for="emergencyContact">Kontak Darurat</label>\n                                    <input \n                                        type="text" \n                                        id="emergencyContact" \n                                        name="emergencyContact" \n                                        class="form-input" \n                                        placeholder="Nama & No. Telepon kontak darurat"\n                                    >\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="card" style="margin-top: 2rem;">\n                            <div class="card-header">\n                                <h3 class="card-title">\n                                    <i class="fas fa-camera"></i>\n                                    Foto untuk Face Recognition\n                                </h3>\n                            </div>\n\n                            <div id="photoSection">\n                                <div class="camera-container">\n                                    <div class="camera-placeholder" id="photoPlaceholder">\n                                        <i class="fas fa-camera"></i>\n                                        <p>Klik untuk mengambil foto pasien</p>\n                                    </div>\n                                    <video id="photoCamera" class="camera-preview" style="display: none;" autoplay muted></video>\n                                    <canvas id="photoCanvas" style="display: none;"></canvas>\n                                    <img id="capturedPhoto" class="captured-image" style="display: none;" alt="Captured Photo">\n                                    <button id="photoCapture" class="capture-btn" style="display: none;">\n                                        <i class="fas fa-camera"></i>\n                                    </button>\n                                </div>\n\n                                 <div class="photos-preview-section" style="margin-top: 1.5rem;">\n                                    <h4 style="text-align: center; margin-bottom: 1rem; color: #4a5568;">\n                                        <i class="fas fa-images"></i>\n                                        Foto yang Diambil (<span id="photoCounter">0</span>/5)\n                                    </h4>\n                                    \n                                    <div class="photos-grid" id="photoContainer">\n                                        <div class="photo-slot" id="slot1">\n                                            <span class="slot-number">1</span>\n                                            <div class="slot-placeholder">\n                                                <i class="fas fa-camera"></i>\n                                            </div>\n                                        </div>\n                                        <div class="photo-slot" id="slot2">\n                                            <span class="slot-number">2</span>\n                                            <div class="slot-placeholder">\n                                                <i class="fas fa-camera"></i>\n                                            </div>\n                                        </div>\n                                        <div class="photo-slot" id="slot3">\n                                            <span class="slot-number">3</span>\n                                            <div class="slot-placeholder">\n                                                <i class="fas fa-camera"></i>\n                                            </div>\n                                        </div>\n                                        <div class="photo-slot" id="slot4">\n                                            <span class="slot-number">4</span>\n                                            <div class="slot-placeholder">\n                                                <i class="fas fa-camera"></i>\n                                            </div>\n                                        </div>\n                                        <div class="photo-slot" id="slot5">\n                                            <span class="slot-number">5</span>\n                                            <div class="slot-placeholder">\n                                                <i class="fas fa-camera"></i>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                \n                                <div style="text-align: center; margin-top: 1rem;">\n                                    <button type="button" id="startPhotoBtn" class="btn btn-primary">\n                                        <i class="fas fa-video"></i>\n                                        Mulai Kamera\n                                    </button>\n                                    <button type="button" id="retakePhotoBtn" class="btn btn-secondary" style="display: none;">\n                                        <i class="fas fa-redo"></i>\n                                        Ambil Ulang\n                                    </button>\n                                    <button type="button" id="stopPhotoBtn" class="btn btn-secondary" style="display: none;">\n                                        <i class="fas fa-video-slash"></i>\n                                        Berhenti\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div style="text-align: center; margin-top: 2rem; padding-top: 2rem; border-top: 1px solid #e2e8f0;">\n                            <button type="submit" class="btn btn-success" style="margin-right: 1rem;">\n                                <i class="fas fa-save"></i>\n                                Simpan Pasien\n                            </button>\n                            <button type="button" class="btn btn-secondary" onclick="hospitalApp.router.navigate(\'dashboard\')">\n                                <i class="fas fa-times"></i>\n                                Batal\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        ',init(e){this.app=e,this.currentStream=null,this.capturedPhotoData=null,this.capturedPhotos=[],this.setupEventListeners(),this.setupValidation()},setupEventListeners(){const e=document.getElementById("addPatientForm"),t=document.getElementById("startPhotoBtn"),n=document.getElementById("stopPhotoBtn"),a=document.getElementById("photoCapture"),i=document.getElementById("retakePhotoBtn");e.addEventListener("submit",(e=>{e.preventDefault(),this.handleSubmit()})),t.addEventListener("click",(()=>this.startPhotoCapture())),n.addEventListener("click",(()=>this.stopPhotoCapture())),a.addEventListener("click",(()=>this.capturePhoto())),i.addEventListener("click",(()=>this.retakePhoto()))},setupValidation(){const e=document.getElementById("nik"),t=document.getElementById("phone");e.addEventListener("input",(e=>{e.target.value=e.target.value.replace(/\D/g,"")})),t.addEventListener("input",(e=>{e.target.value=e.target.value.replace(/\D/g,"")}))},async startPhotoCapture(){try{this.currentStream=await b.start("photoCamera"),document.getElementById("photoPlaceholder").style.display="none",document.getElementById("photoCamera").style.display="block",document.getElementById("photoCapture").style.display="block",document.getElementById("startPhotoBtn").style.display="none",document.getElementById("stopPhotoBtn").style.display="inline-flex",this.updateCaptureButton()}catch(e){this.app.showNotification("Gagal mengakses kamera: "+e.message,"error")}},stopPhotoCapture(){this.currentStream&&(b.stop(this.currentStream),this.currentStream=null),document.getElementById("photoPlaceholder").style.display="flex",document.getElementById("photoCamera").style.display="none",document.getElementById("photoCapture").style.display="none",document.getElementById("startPhotoBtn").style.display="inline-flex",document.getElementById("stopPhotoBtn").style.display="none"},capturePhoto(){const e=document.getElementById("photoCamera"),t=document.getElementById("photoCanvas"),n=document.getElementById("capturedPhoto");if(this.capturedPhotos||(this.capturedPhotos=[]),this.capturedPhotos.length>=5)return void this.app.showNotification("Sudah mengambil 5 foto!","info");t.width=e.videoWidth,t.height=e.videoHeight,t.getContext("2d").drawImage(e,0,0,t.width,t.height);const a=t.toDataURL("image/jpeg",.8);this.capturedPhotos.push(a),this.capturedPhotoData=a,n.src=a,n.style.display="block",this.updatePhotoPreview(),this.updateCaptureButton(),this.app.showNotification(`Foto ${this.capturedPhotos.length}/5 berhasil diambil`,"success"),5===this.capturedPhotos.length&&(this.stopPhotoCapture(),this.app.showNotification("Selesai! Sudah mengambil 5 foto untuk face recognition","success")),document.getElementById("photoPlaceholder").style.display="none",document.getElementById("retakePhotoBtn").style.display="inline-flex"},updateCaptureButton(){const e=document.getElementById("photoCapture"),t=this.capturedPhotos?this.capturedPhotos.length:0;t>=5?(e.textContent="Selesai (5/5)",e.disabled=!0):(e.textContent=`Ambil Foto (${t}/5)`,e.disabled=!1)},updatePhotoPreview(){const e=document.getElementById("photoContainer");e&&(e.innerHTML="",this.capturedPhotos.forEach(((t,n)=>{const a=document.createElement("img");a.src=t,a.style.width="80px",a.style.height="80px",a.style.objectFit="cover",a.style.margin="5px",a.style.border="2px solid #007bff",a.style.borderRadius="5px",a.title=`Foto ${n+1}`,e.appendChild(a)})))},retakePhoto(){this.capturedPhotos=[],this.capturedPhotoData=null,document.getElementById("capturedPhoto").style.display="none",document.getElementById("photoPlaceholder").style.display="flex",document.getElementById("retakePhotoBtn").style.display="none",document.getElementById("startPhotoBtn").style.display="inline-flex";const e=document.getElementById("photoContainer");e&&(e.innerHTML=""),this.updateCaptureButton(),this.app.showNotification("Semua foto dihapus. Silahkan ambil foto ulang.","info")},validateForm(){const e=document.getElementById("addPatientForm"),t=new FormData(e),n=[];["fullName","nik","birthDate","gender","phone","address"].forEach((e=>{t.get(e)&&t.get(e).trim()||n.push(`Field ${e} harus diisi`)}));const a=t.get("nik");a&&16!==a.length&&n.push("NIK harus 16 digit");const i=t.get("phone");return i&&(i.length<10||i.length>13)&&n.push("Nomor telepon tidak valid"),(f.get("patients")||[]).some((e=>e.nik===a))&&n.push("NIK sudah terdaftar dalam sistem"),(!this.capturedPhotos||this.capturedPhotos.length<5)&&n.push("Diperlukan 5 foto wajah pasien untuk face recognition"),n},handleSubmit(){const e=this.validateForm();e.length>0?this.app.showNotification("Error:\n"+e.join("\n"),"error"):(this.app.showLoading(),setTimeout((()=>{this.savePatient()}),1e3))},savePatient(){const e=document.getElementById("addPatientForm"),t=new FormData(e),n={id:Date.now(),name:t.get("fullName").trim(),nik:t.get("nik").trim(),birthDate:t.get("birthDate"),gender:t.get("gender"),bloodType:t.get("bloodType")||null,phone:t.get("phone").trim(),email:t.get("email").trim()||null,address:t.get("address").trim(),emergencyContact:t.get("emergencyContact").trim()||null,photo:this.capturedPhotoData,photos:this.capturedPhotos,registrationDate:(new Date).toISOString(),status:"active"},a=f.get("patients")||[];a.push(n),f.set("patients",a),this.app.hideLoading(),this.app.showModal("Pasien Berhasil Ditambahkan",`Pasien ${n.name} telah berhasil didaftarkan dalam sistem dengan 5 foto untuk face recognition.\n\nNIK: ${n.nik}`,(()=>{this.app.router.navigate("dashboard")}))},destroy(){this.currentStream&&b.stop(this.currentStream)}},S={doctors:[],queues:[],async loadDoctors(){try{const e=this.app.currentUser.token;this.doctors=await(0,k.getDoctors)(e)}catch(e){this.app.showNotification("Gagal mengambil data dokter: "+e.message,"error"),this.doctors=[]}},async loadQueues(){try{const e=this.app.currentUser.token;this.queues=await(0,k.getQueues)(e)}catch(e){this.app.showNotification("Gagal mengambil data antrian: "+e.message,"error"),this.queues=[]}},render(){const e=this.getQueueStats();return`\n            <div class="fade-in">\n                <div class="card">\n                    <div class="card-header">\n                        <h2 class="card-title">\n                            <i class="fas fa-list-ol"></i>\n                            Antrian Pasien\n                        </h2>\n                        <button class="btn btn-primary" id="refreshQueue">\n                            <i class="fas fa-sync-alt"></i>\n                            Refresh\n                        </button>\n                    </div>\n\n                    <div class="queue-stats">\n                        <div class="stat-card">\n                            <div class="stat-number">${e.waiting}</div>\n                            <div class="stat-label">Menunggu</div>\n                        </div>\n                        <div class="stat-card">\n                            <div class="stat-number">${e.examining}</div>\n                            <div class="stat-label">Sedang Diperiksa</div>\n                        </div>\n                        <div class="stat-card">\n                            <div class="stat-number">${e.completed}</div>\n                            <div class="stat-label">Selesai Hari Ini</div>\n                        </div>\n                        <div class="stat-card">\n                            <div class="stat-number">${e.total}</div>\n                            <div class="stat-label">Total Hari Ini</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="card">\n                    <div class="card-header">\n                        <h3 class="card-title">\n                            <i class="fas fa-filter"></i>\n                            Filter Antrian\n                        </h3>\n                    </div>\n                    \n                    <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 1rem; margin-bottom: 1rem;">\n                        <div class="form-group mb-0">\n                            <label class="form-label" for="doctorFilter">Filter Dokter</label>\n                            <select id="doctorFilter" class="form-select">\n                                <option value="">Semua Dokter</option>\n                                ${this.renderDoctorFilterOptions()}\n                            </select>\n                        </div>\n                        \n                        <div class="form-group mb-0">\n                            <label class="form-label" for="statusFilter">Filter Status</label>\n                            <select id="statusFilter" class="form-select">\n                                <option value="">Semua Status</option>\n                                <option value="waiting">Menunggu</option>\n                                <option value="examining">Sedang Diperiksa</option>\n                                <option value="completed">Selesai</option>\n                            </select>\n                        </div>\n                        \n                        <div class="form-group mb-0">\n                            <label class="form-label" for="dateFilter">Filter Tanggal</label>\n                            <input type="date" id="dateFilter" class="form-input" value="${(new Date).toISOString().split("T")[0]}">\n                        </div>\n                    </div>\n                </div>\n\n                <div class="card">\n                    <div class="card-header">\n                        <h3 class="card-title">Daftar Antrian</h3>\n                        <span id="queueCount" style="color: #64748b; font-size: 0.875rem;">\n                            ${this.getFilteredQueue().length} antrian\n                        </span>\n                    </div>\n                    \n                    <div style="overflow-x: auto;">\n                        <table class="queue-table">\n                            <thead>\n                                <tr>\n                                    <th>No. Antrian</th>\n                                    <th>Waktu</th>\n                                    <th>Nama Pasien</th>\n                                    <th>Dokter</th>\n                                    <th>Keluhan</th>\n                                    <th>Prioritas</th>\n                                    <th>Status</th>\n                                    <th>Aksi</th>\n                                </tr>\n                            </thead>\n                            <tbody id="queueTableBody">\n                                ${this.renderQueueTable()}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        `},getQueueStats(){const e=this.getFilteredQueue(),t=(new Date).toDateString(),n=e.filter((e=>new Date(e.timestamp).toDateString()===t));return{waiting:n.filter((e=>"waiting"===e.status)).length,examining:n.filter((e=>"examining"===e.status)).length,completed:n.filter((e=>"completed"===e.status)).length,total:n.length}},getFilteredQueue(){const e=f.get("queue")||[],t=document.getElementById("doctorFilter")?.value||"",n=document.getElementById("statusFilter")?.value||"",a=document.getElementById("dateFilter")?.value||(new Date).toISOString().split("T")[0];return e.filter((e=>{const i=!t||e.doctorId.toString()===t,s=!n||e.status===n,r=!a||new Date(e.timestamp).toDateString()===new Date(a).toDateString();return i&&s&&r})).sort(((e,t)=>{const n={emergency:3,urgent:2,normal:1},a=(n[t.priority]||1)-(n[e.priority]||1);return 0!==a?a:new Date(e.timestamp)-new Date(t.timestamp)}))},renderDoctorFilterOptions(){return this.doctors.map((e=>`\n            <option value="${e.id}">Dr. ${e.name} - ${e.specialty}</option>\n        `)).join("")},renderQueueTable(){const e=this.getFilteredQueue();return 0===e.length?'\n                <tr>\n                    <td colspan="8" style="text-align: center; padding: 2rem; color: #64748b;">\n                        <i class="fas fa-inbox" style="font-size: 2rem; margin-bottom: 1rem; opacity: 0.5; display: block;"></i>\n                        Tidak ada antrian untuk filter yang dipilih\n                    </td>\n                </tr>\n            ':e.map((e=>`\n            <tr>\n                <td>\n                    <strong style="font-size: 1.2rem; color: #3b82f6;">\n                        #${e.queueNumber}\n                    </strong>\n                </td>\n                <td>\n                    <div style="font-size: 0.875rem;">\n                        ${new Date(e.timestamp).toLocaleDateString("id-ID")}\n                    </div>\n                    <div style="font-size: 0.75rem; color: #64748b;">\n                        ${new Date(e.timestamp).toLocaleTimeString("id-ID",{hour:"2-digit",minute:"2-digit"})}\n                    </div>\n                </td>\n                <td>\n                    <strong>${e.patientName}</strong>\n                </td>\n                <td>\n                    <div>Dr. ${e.doctorName}</div>\n                    <div style="font-size: 0.875rem; color: #64748b;">${e.doctorSpecialty}</div>\n                </td>\n                <td>\n                    <div style="max-width: 200px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;" title="${e.complaint}">\n                        ${e.complaint}\n                    </div>\n                </td>\n                <td>\n                    <span class="status-badge ${this.getPriorityClass(e.priority)}">\n                        ${this.getPriorityLabel(e.priority)}\n                    </span>\n                </td>\n                <td>\n                    <span class="status-badge status-${e.status}">\n                        ${this.getStatusLabel(e.status)}\n                    </span>\n                </td>\n                <td>\n                    <div style="display: flex; gap: 0.25rem; flex-wrap: wrap;">\n                        ${this.renderActionButtons(e)}\n                    </div>\n                </td>\n            </tr>\n        `)).join("")},getPriorityClass(e){switch(e){case"emergency":return"status-completed";case"urgent":return"status-examining";default:return"status-waiting"}},getPriorityLabel(e){switch(e){case"emergency":return"Darurat";case"urgent":return"Mendesak";default:return"Normal"}},getStatusLabel(e){switch(e){case"waiting":return"Menunggu";case"examining":return"Diperiksa";case"completed":return"Selesai";default:return e}},renderActionButtons(e){switch(e.status){case"waiting":return`\n                    <button class="btn btn-primary" style="font-size: 0.75rem; padding: 0.25rem 0.5rem;" \n                            onclick="queueComponent.startExamination(${e.id})">\n                        <i class="fas fa-play"></i>\n                        Mulai\n                    </button>\n                `;case"examining":return`\n                    <button class="btn btn-success" style="font-size: 0.75rem; padding: 0.25rem 0.5rem;" \n                            onclick="queueComponent.completeExamination(${e.id})">\n                        <i class="fas fa-check"></i>\n                        Selesai\n                    </button>\n                `;case"completed":return`\n                    <button class="btn btn-secondary" style="font-size: 0.75rem; padding: 0.25rem 0.5rem;" \n                            onclick="queueComponent.viewDetails(${e.id})">\n                        <i class="fas fa-eye"></i>\n                        Detail\n                    </button>\n                `;default:return""}},async init(e){this.app=e,window.queueComponent=this,await this.loadDoctors(),this.setupEventListeners(),this.startAutoRefresh()},setupEventListeners(){const e=document.getElementById("refreshQueue"),t=document.getElementById("doctorFilter"),n=document.getElementById("statusFilter"),a=document.getElementById("dateFilter");e.addEventListener("click",(()=>this.refreshQueue())),[t,n,a].forEach((e=>{e&&e.addEventListener("change",(()=>this.refreshQueue()))}))},refreshQueue(){const e=document.getElementById("queueTableBody"),t=document.getElementById("queueCount");e&&(e.innerHTML=this.renderQueueTable()),t&&(t.textContent=`${this.getFilteredQueue().length} antrian`);const n=this.getQueueStats(),a=document.querySelectorAll(".stat-card .stat-number");a.length>=4&&(a[0].textContent=n.waiting,a[1].textContent=n.examining,a[2].textContent=n.completed,a[3].textContent=n.total)},startAutoRefresh(){this.refreshInterval=setInterval((()=>{this.refreshQueue()}),3e4)},startExamination(e){const t=f.get("queue")||[],n=t.find((t=>t.id===e));n?this.app.showModal("Konfirmasi",`Mulai pemeriksaan untuk pasien ${n.patientName}?`,(()=>{n.status="examining",n.examinationStartTime=(new Date).toISOString();const e=f.get("doctors")||[],a=e.find((e=>e.id===n.doctorId));a&&(a.status="busy",f.set("doctors",e)),f.set("queue",t),this.refreshQueue(),this.app.showNotification(`Pemeriksaan untuk ${n.patientName} telah dimulai`,"success")}),!0):this.app.showNotification("Item antrian tidak ditemukan","error")},completeExamination(e){const t=(f.get("queue")||[]).find((t=>t.id===e));t?this.showCompletionForm(t):this.app.showNotification("Item antrian tidak ditemukan","error")},showCompletionForm(e){const t=document.createElement("div");t.className="modal-overlay",t.style.display="flex",t.innerHTML=`\n            <div class="modal">\n                <div class="modal-header">\n                    <h3>Selesaikan Pemeriksaan - ${e.patientName}</h3>\n                    <button class="modal-close" id="customModalClose">\n                        <i class="fas fa-times"></i>\n                    </button>\n                </div>\n                <div class="modal-body">\n                    \n            <form id="completionForm">\n                <div class="form-group">\n                    <label class="form-label">Diagnosis</label>\n                    <textarea class="form-textarea" id="diagnosis" placeholder="Masukkan diagnosis..." required></textarea>\n                </div>\n                <div class="form-group">\n                    <label class="form-label">Resep/Obat</label>\n                    <textarea class="form-textarea" id="prescription" placeholder="Masukkan resep obat..."></textarea>\n                </div>\n                <div class="form-group">\n                    <label class="form-label">Catatan Tambahan</label>\n                    <textarea class="form-textarea" id="notes" placeholder="Catatan tambahan..."></textarea>\n                </div>\n            </form>\n        \n                </div>\n                <div class="modal-footer">\n                    <button class="btn btn-success" id="completeBtn">\n                        <i class="fas fa-check"></i>\n                        Selesaikan\n                    </button>\n                    <button class="btn btn-secondary" id="cancelBtn">Batal</button>\n                </div>\n            </div>\n        `,document.body.appendChild(t);const n=()=>{document.body.removeChild(t)};t.querySelector("#customModalClose").addEventListener("click",n),t.querySelector("#cancelBtn").addEventListener("click",n),t.addEventListener("click",(e=>{e.target===t&&n()})),t.querySelector("#completeBtn").addEventListener("click",(()=>{const t=document.getElementById("diagnosis").value.trim(),a=document.getElementById("prescription").value.trim(),i=document.getElementById("notes").value.trim();t?(this.finalizeExamination(e,{diagnosis:t,prescription:a,notes:i}),n()):this.app.showNotification("Diagnosis harus diisi","error")}))},finalizeExamination(e,t){const n=f.get("queue")||[];e.status="completed",e.completionTime=(new Date).toISOString(),e.diagnosis=t.diagnosis,e.prescription=t.prescription,e.notes=t.notes;const a=f.get("doctors")||[],i=a.find((t=>t.id===e.doctorId));i&&(i.status="available",f.set("doctors",a)),f.set("queue",n),this.refreshQueue(),this.app.showNotification(`Pemeriksaan untuk ${e.patientName} telah selesai`,"success")},viewDetails(e){const t=(f.get("queue")||[]).find((t=>t.id===e));if(!t)return void this.app.showNotification("Detail tidak ditemukan","error");const n=document.createElement("div");n.className="modal-overlay",n.style.display="flex",n.innerHTML=`\n            <div class="modal">\n                <div class="modal-header">\n                    <h3>Detail Pemeriksaan</h3>\n                    <button class="modal-close" id="detailModalClose">\n                        <i class="fas fa-times"></i>\n                    </button>\n                </div>\n                <div class="modal-body">\n                    <div class="patient-info">\n                        <div class="info-item">\n                            <div class="info-label">Pasien</div>\n                            <div class="info-value">${t.patientName}</div>\n                        </div>\n                        <div class="info-item">\n                            <div class="info-label">Dokter</div>\n                            <div class="info-value">Dr. ${t.doctorName} - ${t.doctorSpecialty}</div>\n                        </div>\n                        <div class="info-item">\n                            <div class="info-label">Waktu Antrian</div>\n                            <div class="info-value">${new Date(t.timestamp).toLocaleString("id-ID")}</div>\n                        </div>\n                        <div class="info-item">\n                            <div class="info-label">Prioritas</div>\n                            <div class="info-value">\n                                <span class="status-badge ${this.getPriorityClass(t.priority)}">\n                                    ${this.getPriorityLabel(t.priority)}\n                                </span>\n                            </div>\n                        </div>\n                        <div class="info-item">\n                            <div class="info-label">Status</div>\n                            <div class="info-value">\n                                <span class="status-badge status-${t.status}">\n                                    ${this.getStatusLabel(t.status)}\n                                </span>\n                            </div>\n                        </div>\n                        <div class="info-item">\n                            <div class="info-label">Keluhan</div>\n                            <div class="info-value">${t.complaint}</div>\n                        </div>\n                        ${t.examinationStartTime?`\n                            <div class="info-item">\n                                <div class="info-label">Waktu Mulai Pemeriksaan</div>\n                                <div class="info-value">${new Date(t.examinationStartTime).toLocaleString("id-ID")}</div>\n                            </div>\n                        `:""}\n                        ${t.diagnosis?`\n                            <div class="info-item">\n                                <div class="info-label">Diagnosis</div>\n                                <div class="info-value">${t.diagnosis}</div>\n                            </div>\n                        `:""}\n                        ${t.prescription?`\n                            <div class="info-item">\n                                <div class="info-label">Resep</div>\n                                <div class="info-value">${t.prescription}</div>\n                            </div>\n                        `:""}\n                        ${t.notes?`\n                            <div class="info-item">\n                                <div class="info-label">Catatan</div>\n                                <div class="info-value">${t.notes}</div>\n                            </div>\n                        `:""}\n                        ${t.completionTime?`\n                            <div class="info-item">\n                                <div class="info-label">Waktu Selesai</div>\n                                <div class="info-value">${new Date(t.completionTime).toLocaleString("id-ID")}</div>\n                            </div>\n                        `:""}\n                    </div>\n                </div>\n                <div class="modal-footer">\n                    <button class="btn btn-secondary" id="detailCloseBtn">\n                        <i class="fas fa-times"></i>\n                        Tutup\n                    </button>\n                    ${"completed"===t.status?"":`\n                        <button class="btn btn-primary" onclick="hospitalApp.router.navigate('patient-record', { patientId: ${t.patientId} })">\n                            <i class="fas fa-user"></i>\n                            Lihat Rekam Medis\n                        </button>\n                    `}\n                </div>\n            </div>\n        `,document.body.appendChild(n);const a=()=>{document.body.removeChild(n)};n.querySelector("#detailModalClose").addEventListener("click",a),n.querySelector("#detailCloseBtn").addEventListener("click",a),n.addEventListener("click",(e=>{e.target===n&&a()}))},destroy(){this.refreshInterval&&clearInterval(this.refreshInterval),window.queueComponent===this&&delete window.queueComponent}},B={render:()=>'\n            <div class="fade-in">\n                <div class="card">\n                    <div class="card-header">\n                        <h2 class="card-title">\n                            <i class="fas fa-users"></i>\n                            Daftar Pasien\n                        </h2>\n                        <div style="display: flex; gap: 1rem;">\n                            <button class="btn btn-primary" id="refreshPatients">\n                                <i class="fas fa-sync-alt"></i>\n                                Refresh\n                            </button>\n                            <button class="btn btn-success" onclick="hospitalApp.router.navigate(\'add-patient\')">\n                                <i class="fas fa-user-plus"></i>\n                                Tambah Pasien\n                            </button>\n                        </div>\n                    </div>\n\n                    \x3c!-- Search and Filter Section --\x3e\n                    <div class="search-filter-section">\n                        <div class="form-group mb-0">\n                            <label class="form-label" for="searchPatients">Cari Pasien</label>\n                            <input \n                                type="text" \n                                id="searchPatients" \n                                class="form-input" \n                                placeholder="Cari berdasarkan nama, NIK, atau telepon..."\n                            >\n                        </div>\n                        <div class="form-group mb-0">\n                            <label class="form-label" for="genderFilter">Filter Jenis Kelamin</label>\n                            <select id="genderFilter" class="form-select">\n                                <option value="">Semua</option>\n                                <option value="M">Laki-laki</option>\n                                <option value="F">Perempuan</option>\n                            </select>\n                        </div>\n                        <div class="form-group mb-0">\n                            <label class="form-label" for="bloodTypeFilter">Filter Golongan Darah</label>\n                            <select id="bloodTypeFilter" class="form-select">\n                                <option value="">Semua</option>\n                                <option value="A">A</option>\n                                <option value="B">B</option>\n                                <option value="AB">AB</option>\n                                <option value="O">O</option>\n                            </select>\n                        </div>\n                        <div class="form-group mb-0">\n                            <label class="form-label" for="statusFilter">Filter Status</label>\n                            <select id="statusFilter" class="form-select">\n                                <option value="">Semua</option>\n                                <option value="active">Aktif</option>\n                                <option value="inactive">Tidak Aktif</option>\n                            </select>\n                        </div>\n                    </div>\n\n                    \x3c!-- Statistics Section --\x3e\n                    <div class="queue-stats">\n                        <div class="stat-card">\n                            <div class="stat-number" id="totalPatients">0</div>\n                            <div class="stat-label">Total Pasien</div>\n                        </div>\n                        <div class="stat-card">\n                            <div class="stat-number" id="activePatients">0</div>\n                            <div class="stat-label">Pasien Aktif</div>\n                        </div>\n                        <div class="stat-card">\n                            <div class="stat-number" id="malePatients">0</div>\n                            <div class="stat-label">Laki-laki</div>\n                        </div>\n                        <div class="stat-card">\n                            <div class="stat-number" id="femalePatients">0</div>\n                            <div class="stat-label">Perempuan</div>\n                        </div>\n                    </div>\n                </div>\n\n                \x3c!-- Toggle View Buttons --\x3e\n                <div class="card">\n                    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem;">\n                        <h3>\n                            <span id="filteredCount">0</span> pasien ditemukan\n                        </h3>\n                        <div style="display: flex; gap: 0.5rem;">\n                            <button class="btn btn-secondary" id="cardViewBtn">\n                                <i class="fas fa-th-large"></i>\n                                Card View\n                            </button>\n                            <button class="btn btn-primary" id="tableViewBtn">\n                                <i class="fas fa-table"></i>\n                                Table View\n                            </button>\n                        </div>\n                    </div>\n\n                    \x3c!-- Table View --\x3e\n                    <div id="tableView" style="overflow-x: auto;">\n                        <table class="patients-table">\n                            <thead>\n                                <tr>\n                                    <th>Foto</th>\n                                    <th>Nama Lengkap</th>\n                                    <th>NIK</th>\n                                    <th>Umur</th>\n                                    <th>Jenis Kelamin</th>\n                                    <th>Golongan Darah</th>\n                                    <th>No. Telepon</th>\n                                    <th>Status</th>\n                                    <th>Aksi</th>\n                                </tr>\n                            </thead>\n                            <tbody id="patientsTableBody">\n                                \x3c!-- Content will be populated by JavaScript --\x3e\n                            </tbody>\n                        </table>\n                    </div>\n\n                    \x3c!-- Card View --\x3e\n                    <div id="cardView" style="display: none;">\n                        <div id="patientsCardContainer">\n                            \x3c!-- Content will be populated by JavaScript --\x3e\n                        </div>\n                    </div>\n                </div>\n            </div>\n        ',init(e){this.app=e,this.currentView="table",this.allPatients=[],this.filteredPatients=[],this.setupEventListeners(),this.loadPatients()},setupEventListeners(){const e=document.getElementById("searchPatients"),t=document.getElementById("genderFilter"),n=document.getElementById("bloodTypeFilter"),a=document.getElementById("statusFilter"),i=document.getElementById("refreshPatients"),s=document.getElementById("cardViewBtn"),r=document.getElementById("tableViewBtn");e&&e.addEventListener("input",(()=>this.filterPatients())),[t,n,a].forEach((e=>{e&&e.addEventListener("change",(()=>this.filterPatients()))})),i&&i.addEventListener("click",(()=>this.refreshData())),s&&s.addEventListener("click",(()=>this.switchView("card"))),r&&r.addEventListener("click",(()=>this.switchView("table")))},async loadPatients(){this.app.showLoading();try{const e=this.app.currentUser.token,t=await Promise.resolve().then(n.bind(n,411)).then((t=>t.getPatients(e)));this.allPatients=t,this.filteredPatients=[...t],this.app.storage.set("patients",t),this.renderPatients(),this.updateStatistics(),this.updateFilteredCount()}catch(e){this.app.showNotification("Gagal mengambil data pasien: "+e.message,"error")}finally{this.app.hideLoading()}},filterPatients(){const e=document.getElementById("searchPatients")?.value.toLowerCase()||"",t=document.getElementById("genderFilter")?.value||"",n=document.getElementById("bloodTypeFilter")?.value||"",a=document.getElementById("statusFilter")?.value||"";this.filteredPatients=this.allPatients.filter((i=>{const s=!e||i.name&&i.name.toLowerCase().includes(e)||i.nik&&i.nik.includes(e)||i.phone&&i.phone.includes(e),r=i.gender?i.gender.trim().toUpperCase():"",o=t?t.toUpperCase():"",l=!o||r===o,d=!n||i.bloodType===n,c=!a||i.status===a;return s&&l&&d&&c})),this.renderPatients(),this.updateFilteredCount()},renderPatients(){"table"===this.currentView?this.renderTableView():this.renderCardView()},getGenderDisplay:e=>e&&"M"===e.trim().toUpperCase()?"Laki-laki":e&&"F"===e.trim().toUpperCase()?"Perempuan":"-",renderTableView(){const e=document.getElementById("patientsTableBody");e&&(0!==this.filteredPatients.length?e.innerHTML=this.filteredPatients.map((e=>`\n            <tr>\n                <td>\n                    <div class="patient-avatar" style="width: 40px; height: 40px; font-size: 1rem;">\n                        ${e.photo?`<img src="${e.photo}" class="patient-photo" alt="${e.name}">`:e.name.charAt(0).toUpperCase()}\n                    </div>\n                </td>\n                <td>\n                    <strong>${e.name}</strong>\n                </td>\n                <td>${e.nik||"-"}</td>\n                <td>${this.calculateAge(e.birthDate)} tahun</td>\n                <td>${this.getGenderDisplay(e.gender)}</td>\n                <td>${e.bloodType||"-"}</td>\n                <td>${e.phone||"-"}</td>\n                <td>\n                    <span class="status-badge status-${e.status||"active"}">\n                        ${"inactive"===e.status?"Tidak Aktif":"Aktif"}\n                    </span>\n                </td>\n                <td>\n                    <div style="display: flex; gap: 0.25rem; flex-wrap: wrap;">\n                        <button class="btn btn-primary" style="font-size: 0.75rem; padding: 0.25rem 0.5rem;" \n                                onclick="patientsComponent.viewPatientDetail(${e.id})">\n                            <i class="fas fa-eye"></i>\n                            Detail\n                        </button>\n                        <button class="btn btn-success" style="font-size: 0.75rem; padding: 0.25rem 0.5rem;" \n                                onclick="patientsComponent.addToQueue(${e.id})">\n                            <i class="fas fa-plus"></i>\n                            Antri\n                        </button>\n                    </div>\n                </td>\n            </tr>\n        `)).join(""):e.innerHTML='\n                <tr>\n                    <td colspan="9" style="text-align: center; padding: 2rem; color: #64748b;">\n                        <i class="fas fa-users" style="font-size: 2rem; margin-bottom: 1rem; opacity: 0.5; display: block;"></i>\n                        Tidak ada pasien ditemukan\n                    </td>\n                </tr>\n            ')},renderCardView(){const e=document.getElementById("patientsCardContainer");e&&(0!==this.filteredPatients.length?e.innerHTML=this.filteredPatients.map((e=>`\n            <div class="patient-card">\n                <div class="patient-header">\n                    <div class="patient-avatar">\n                        ${e.photo?`<img src="${e.photo}" style="width: 100%; height: 100%; border-radius: 50%; object-fit: cover;" alt="${e.name}">`:e.name.charAt(0).toUpperCase()}\n                    </div>\n                    <div style="flex: 1;">\n                        <h3 style="margin: 0; color: #1e293b;">${e.name}</h3>\n                        <p style="margin: 0; color: #64748b;">NIK: ${e.nik||"-"}</p>\n                        <span class="status-badge status-${e.status||"active"}" style="margin-top: 0.5rem; display: inline-block;">\n                            ${"inactive"===e.status?"Tidak Aktif":"Aktif"}\n                        </span>\n                    </div>\n                    <div style="display: flex; flex-direction: column; gap: 0.5rem;">\n                        <button class="btn btn-primary" style="font-size: 0.875rem; padding: 0.5rem 1rem;" \n                                onclick="patientsComponent.viewPatientDetail(${e.id})">\n                            <i class="fas fa-eye"></i>\n                            Detail\n                        </button>\n                        <button class="btn btn-success" style="font-size: 0.875rem; padding: 0.5rem 1rem;" \n                                onclick="patientsComponent.addToQueue(${e.id})">\n                            <i class="fas fa-plus"></i>\n                            Tambah Antrian\n                        </button>\n                    </div>\n                </div>\n                \n                <div class="patient-info">\n                    <div class="info-item">\n                        <div class="info-label">Umur</div>\n                        <div class="info-value">${this.calculateAge(e.birthDate)} tahun</div>\n                    </div>\n                    <div class="info-item">\n                        <div class="info-label">Jenis Kelamin</div>\n                        <div class="info-value">${this.getGenderDisplay(e.gender)}</div>\n                    </div>\n                    <div class="info-item">\n                        <div class="info-label">Golongan Darah</div>\n                        <div class="info-value">${e.bloodType||"-"}</div>\n                    </div>\n                    <div class="info-item">\n                        <div class="info-label">No. Telepon</div>\n                        <div class="info-value">${e.phone||"-"}</div>\n                    </div>\n                    <div class="info-item">\n                        <div class="info-label">Alamat</div>\n                        <div class="info-value">${e.address||"-"}</div>\n                    </div>\n                    <div class="info-item">\n                        <div class="info-label">Terdaftar</div>\n                        <div class="info-value">${new Date(e.registrationDate).toLocaleDateString("id-ID")}</div>\n                    </div>\n                </div>\n            </div>\n        `)).join(""):e.innerHTML='\n                <div style="text-align: center; padding: 3rem; color: #64748b;">\n                    <i class="fas fa-users" style="font-size: 3rem; margin-bottom: 1rem; opacity: 0.5;"></i>\n                    <h3>Tidak ada pasien ditemukan</h3>\n                    <p>Coba ubah filter pencarian atau tambah pasien baru</p>\n                </div>\n            ')},switchView(e){this.currentView=e;const t=document.getElementById("tableView"),n=document.getElementById("cardView"),a=document.getElementById("tableViewBtn"),i=document.getElementById("cardViewBtn");"table"===e?(t.style.display="block",n.style.display="none",a.classList.add("btn-primary"),a.classList.remove("btn-secondary"),i.classList.add("btn-secondary"),i.classList.remove("btn-primary")):(t.style.display="none",n.style.display="block",i.classList.add("btn-primary"),i.classList.remove("btn-secondary"),a.classList.add("btn-secondary"),a.classList.remove("btn-primary")),this.renderPatients()},updateStatistics(){const e=this.allPatients||[],t=e.length,n=e.filter((e=>"inactive"!==e.status)).length,a=e.filter((e=>e.gender&&"M"===e.gender.trim().toUpperCase())).length,i=e.filter((e=>e.gender&&"F"===e.gender.trim().toUpperCase())).length;document.getElementById("totalPatients").textContent=t,document.getElementById("activePatients").textContent=n,document.getElementById("malePatients").textContent=a,document.getElementById("femalePatients").textContent=i},updateFilteredCount(){const e=document.getElementById("filteredCount");e&&(e.textContent=this.filteredPatients.length)},calculateAge(e){if(!e)return"-";const t=new Date,n=new Date(e);let a=t.getFullYear()-n.getFullYear();const i=t.getMonth()-n.getMonth();return(i<0||0===i&&t.getDate()<n.getDate())&&a--,a},viewPatientDetail(e){this.app.router.navigate("patient-record",{patientId:String(e)})},addToQueue(e){const t=this.allPatients.find((t=>t.id===e));t&&(this.app.storage.set("selectedPatientForQueue",t),this.app.router.navigate("patient-record",{patientId:String(e)}))},refreshData(){this.loadPatients(),this.app.showNotification("Data pasien berhasil diperbarui","success")},destroy(){}};class D{constructor(){this.router=new y,this.storage=f,this.currentUser=null,this.isAuthenticated=!1,this.init()}init(){this.storage.init(),this.checkAuthState(),this.setupRoutes(),this.setupEventListeners(),this.start()}checkAuthState(){if(localStorage.getItem("authToken")){const e=this.storage.get("currentUser");e&&(this.currentUser=e,this.isAuthenticated=!0)}}setupRoutes(){this.router.addRoute("login",(()=>{this.isAuthenticated?this.router.navigate("dashboard"):this.showLogin()})),this.router.addRoute("dashboard",(()=>{this.requireAuth((()=>this.showDashboard()))})),this.router.addRoute("face-recognition",(()=>{this.requireAuth((()=>this.showFaceRecognition()))})),this.router.addRoute("patients",(()=>{this.requireAuth((()=>this.showPatients()))})),this.router.addRoute("patient-record",(()=>{this.requireAuth((()=>this.showPatientRecord()))})),this.router.addRoute("add-patient",(()=>{this.requireAuth((()=>this.showAddPatient()))})),this.router.addRoute("queue",(()=>{this.requireAuth((()=>this.showQueue()))})),this.router.setDefaultRoute((()=>{this.isAuthenticated?this.router.navigate("dashboard"):this.router.navigate("login")}))}setupEventListeners(){document.addEventListener("click",(e=>{("logoutBtn"===e.target.id||e.target.closest("#logoutBtn"))&&this.logout()})),document.addEventListener("click",(e=>{const t=e.target.closest(".nav-link");if(t){e.preventDefault(),document.querySelectorAll(".nav-link").forEach((e=>{e.classList.remove("active")})),t.classList.add("active");const n=t.dataset.route;n&&this.router.navigate(n)}})),document.addEventListener("click",(e=>{"modalClose"!==e.target.id&&"modalOverlay"!==e.target.id||this.hideModal(),"modalConfirm"!==e.target.id&&"modalCancel"!==e.target.id||this.hideModal()}))}requireAuth(e){this.isAuthenticated?e():this.router.navigate("login")}start(){this.router.start()}async login(e){this.showLoading();try{const t=await(0,k.loginUser)(e);return localStorage.setItem("authToken",t),this.currentUser={username:e.username,token:t},this.isAuthenticated=!0,this.storage.set("currentUser",this.currentUser),this.hideLoading(),this.showHeader(),this.currentUser}catch(e){throw this.hideLoading(),e}}logout(){this.showModal("Konfirmasi Logout","Apakah Anda yakin ingin keluar dari sistem?",(()=>{this.currentUser=null,this.isAuthenticated=!1,this.storage.remove("currentUser"),localStorage.removeItem("authToken"),this.hideHeader(),this.router.navigate("login")}),!0)}showLogin(){this.hideHeader(),document.getElementById("app-content").innerHTML=w.render(),w.init(this)}showDashboard(){this.showHeader(),document.getElementById("app-content").innerHTML=x.render(),x.init(this)}showFaceRecognition(){this.showHeader(),document.getElementById("app-content").innerHTML=E.render(),E.init(this)}showPatients(){this.showHeader(),document.getElementById("app-content").innerHTML=B.render(),B.init(this),window.patientsComponent=B}async showPatientRecord(){this.showHeader();const e=this.router.getParams().patientId,t=await I.render(e);document.getElementById("app-content").innerHTML=t,await I.init(this,e)}showAddPatient(){this.showHeader(),document.getElementById("app-content").innerHTML=P.render(),P.init(this)}showQueue(){this.showHeader(),document.getElementById("app-content").innerHTML=S.render(),S.init(this)}showHeader(){document.getElementById("header").style.display="block"}hideHeader(){document.getElementById("header").style.display="none"}showLoading(){document.getElementById("loadingSpinner").style.display="flex"}hideLoading(){document.getElementById("loadingSpinner").style.display="none"}showModal(e,t,n=null,a=!1){document.getElementById("modalTitle").textContent=e,document.getElementById("modalMessage").textContent=t;const i=document.getElementById("modalConfirm"),s=document.getElementById("modalCancel"),r=i.cloneNode(!0),o=s.cloneNode(!0);i.parentNode.replaceChild(r,i),s.parentNode.replaceChild(o,s),n&&r.addEventListener("click",n),o.style.display=a?"inline-flex":"none",document.getElementById("modalOverlay").style.display="flex"}hideModal(){document.getElementById("modalOverlay").style.display="none"}showNotification(e,t="info"){const n="error"===t?"Error":"success"===t?"Berhasil":"Informasi";this.showModal(n,e)}}document.addEventListener("DOMContentLoaded",(()=>{window.hospitalApp=new D}))})();